# Stage 1: Build
FROM node:20.11.0-slim AS builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt update && apt install -y gettext-base \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Arguments for build-time variables
ARG NPM_READ_TOKEN

# Environment variables for runtime
ENV VITE_APP_PREFIX="BLUE.AI_CMS" \
    VITE_APP_API_BASE_URL="https://omni-core-api.rdev.antwerptechnologies.com" \
    NPM_READ_TOKEN="$NPM_READ_TOKEN"

# Copy package.json and package-lock.json for caching purposes
COPY package*.json ./

# Configure npm for private repository access
RUN echo "@blueai:registry=https://gitlab.com/api/v4/groups/a10179/-/packages/npm/" > .npmrc \
    && echo "//gitlab.com/api/v4/groups/a10179/-/packages/npm/:_authToken=${NPM_READ_TOKEN}" >> .npmrc \
    && echo "always-auth=true" >> .npmrc \
    && echo "legacy-peer-deps=true" >> .npmrc \
    && echo "git-checks=false" >> .npmrc

# Install dependencies
RUN npm install

# Copy the rest of your application's source code
COPY . ./

# Build the application
RUN npm run build

# Stage 2: Production
FROM node:20.11.0-slim AS development

# Set working directory
WORKDIR /app

# Copy built artifacts from the builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Expose the port the app runs on
EXPOSE 3000

# Start the application
CMD ["npm", "run", "start"]